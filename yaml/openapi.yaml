openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Hp Pinjam
  termsOfService: https://hp-pinjam.my.id/swagger/
  contact:
    email: farhanriziq01@gmail.com
  license:
    name: Pasetobackend Package
    url1: https://pkg.go.dev/github.com/hp-pinjam/pasetobackend
    url2: https://pkg.go.dev/github.com/hp-pinjam/be_p3
  version: 1.0.1
externalDocs:
  description: Repo backend
  url: http://hp-pinjam.my.id/pasetobackend/
servers:
  - url: https://asia-southeast2-hppinjam.cloudfunctions.net
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://hp-pinjam.my.id/pasetobackend/
  - name: register
    description: Register Account
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://hp-pinjam.my.id/pasetobackend/
  - name: hp
    description: Mobile Phone Operations
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://hp-pinjam.my.id/pasetobackend/
paths:
  /registeruser:
    post:
      tags:
        - register
      summary: Register User Without Token
      description: Daftar Akun User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
  /Login:
    post:
      tags:
        - auth
      summary: User Login to Get Token
      description: User Login and Get Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /adminlogin:
    post:
      tags:
        - auth
      summary: Admin Login to Get Token
      description: Admin Login and Get Token using Email and Password
      operationId: adminLoginService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAuth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /insertdatahp:
    post:
      tags:
        - hp
      summary: Insert Mobile Phone
      description: Insert mobile phone into the database
      operationId: insertHpService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobilePhone'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input

components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example: farhan
        password:
          type: string
          example: akurijik
    AdminAuth:
      type: object
      properties:
        email:
          type: string
          example: hppinjam@gmail.com
        password:
          type: string
          example: hebat
    MobilePhone:
      type: object
      properties:
        nomorid:
          type: integer
          example: 5
        title:
          type: string
          example: Mitto
        description:
          type: string
          example: hp produk lokal
        image:
          type: string
          format: binary
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    responseUser:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          type: object
          properties:
            username:
              type: string
              example: farhan
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: user
    Auth:
      type: object
      properties:
        username:
          type: string
          example: farhan
        password:
          type: string
          example: akurijik
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: akurijik
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    AdminAuthReq:
      description: Request Admin Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminAuth'
    MobilePhoneReq:
      description: Request Mobile Phone Insertion
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MobilePhone'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header
